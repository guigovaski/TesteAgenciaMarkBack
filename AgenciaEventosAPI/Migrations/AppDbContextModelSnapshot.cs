// <auto-generated />
using AgenciaEventosAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AgenciaEventosAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AgenciaEventosAPI.Entities.Email", b =>
                {
                    b.Property<int>("EmailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmailId"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Receiver")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("EmailId");

                    b.HasIndex("EventId");

                    b.ToTable("Emails");

                    b.HasData(
                        new
                        {
                            EmailId = 1,
                            Author = "Autor 1",
                            EventId = 1,
                            Message = "Teste de mensagem do e-mail 1",
                            Receiver = "Recebedor 1",
                            Subject = "Assunto do e-mail 1"
                        },
                        new
                        {
                            EmailId = 2,
                            Author = "Autor 2",
                            EventId = 2,
                            Message = "Teste de mensagem do e-mail 2",
                            Receiver = "Recebedor 2",
                            Subject = "Assunto do e-mail 2"
                        },
                        new
                        {
                            EmailId = 3,
                            Author = "Autor 3",
                            EventId = 3,
                            Message = "Teste de mensagem do e-mail 3",
                            Receiver = "Recebedor 3",
                            Subject = "Assunto do e-mail 3"
                        });
                });

            modelBuilder.Entity("AgenciaEventosAPI.Entities.Event", b =>
                {
                    b.Property<int>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EventId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("EventId");

                    b.ToTable("Events");

                    b.HasData(
                        new
                        {
                            EventId = 1,
                            Name = "Evento 1"
                        },
                        new
                        {
                            EventId = 2,
                            Name = "Evento 2"
                        },
                        new
                        {
                            EventId = 3,
                            Name = "Evento 3"
                        });
                });

            modelBuilder.Entity("AgenciaEventosAPI.Entities.WhatsApp", b =>
                {
                    b.Property<int>("WhatsAppId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WhatsAppId"));

                    b.Property<string>("AuthorPhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceiverPhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WhatsAppId");

                    b.HasIndex("EventId");

                    b.ToTable("WhatsApps");

                    b.HasData(
                        new
                        {
                            WhatsAppId = 1,
                            AuthorPhoneNumber = "41999999999",
                            EventId = 1,
                            Message = "Teste de mensagem do whats 1",
                            ReceiverPhoneNumber = "41666666666"
                        },
                        new
                        {
                            WhatsAppId = 2,
                            AuthorPhoneNumber = "41888888888",
                            EventId = 2,
                            Message = "Teste de mensagem do whats 2",
                            ReceiverPhoneNumber = "41555555555"
                        },
                        new
                        {
                            WhatsAppId = 3,
                            AuthorPhoneNumber = "41777777777",
                            EventId = 3,
                            Message = "Teste de mensagem do whats 3",
                            ReceiverPhoneNumber = "41444444444"
                        });
                });

            modelBuilder.Entity("AgenciaEventosAPI.Entities.Email", b =>
                {
                    b.HasOne("AgenciaEventosAPI.Entities.Event", "Event")
                        .WithMany("Emails")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");
                });

            modelBuilder.Entity("AgenciaEventosAPI.Entities.WhatsApp", b =>
                {
                    b.HasOne("AgenciaEventosAPI.Entities.Event", "Event")
                        .WithMany("WhatsApps")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");
                });

            modelBuilder.Entity("AgenciaEventosAPI.Entities.Event", b =>
                {
                    b.Navigation("Emails");

                    b.Navigation("WhatsApps");
                });
#pragma warning restore 612, 618
        }
    }
}
